//package lessons.lesson03.homework
//
//import com.sun.source.doctree.DocTree
//
//
////1. Название мероприятия
//val hollyday_name: String = "Хакатон"
////2. Дата проведения
//var hollyday_date: String = "31/12/2025"
////3. Место проведения
//val hollyday_adress: String = "Новосибирск, огдана Хмельницкого 34"
////.4 Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы.
//private val budget_text: String = "Сто тысяч рублей"
////5. Количество участников
//var quant: Int = 15 // на момент подачи заявки
////6. Длительность хакатона
//val hak_time: Int = 120 // в минутах
////7. Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг.
//private val contract_text: String by lazy {"Contract/Phone"}
////8. Текущее состояние хакатона (статус)
//var hak_status: String = "Регистрация участников"
////9. Список спонсоров
//val sponsors: String = "1) 2) 3)"
////10. Бюджет мероприятия
//private val budget_sum: Int = 100000 // определен изначально
////11. Текущий уровень доступа к интернету
//val internet: Int = 1
////12. Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки.
//var coord_inf: String = "телефоны и ФИО" // может меняться до начала организации
////13. Количество команд
//var command_kol: Int = 4 // так заявлено,но может измениться
////14. Перечень задач
//val task_list: String = "List of tasks" //внутренние задачи организации мероприятия определены
////15. План эвакуации
//const val plan_evacuation = "text of plan" //и даже распечатан
////16. Список доступного оборудования
//val list_equip: String = "list of equipment"
////17. Список свободного оборудования
//var list_equip_on: String = "list of aviable equipment"
////18. График питания участников (зависит от поставщика питания, определяемого за неделю до начала)
//var food_schedule: String = "breakfast lunch dinner"
////19. План мероприятий на случай сбоев
//const val list_task_warning: String = "text of plan x" //Т.н. план Б
////20. Список экспертов и жюри
//var jury: String = "list of people" //Определен, не изменяем
////21. Методы и процедуры для сбора отзывов от участников и гостей, включая анонимные опросы и интервью
//val mets: String = "Разработанные методы и опросники"
////22. Политика конфиденциальности
//val politics: String = "Всем доступная для ознакомления"
////23. Приватные отзывы (фидбэк) участников и зрителей для анализа проблем.
//private var otzovik: String = "" //пока нет отзывов
////24. Текущая температура в помещении
//var temper: Int = 22
////25. Мониторинг и анализ производительности сетевого оборудования и интернет-соединения.
//var monit_host: Int = 0 // функция анализа
//    get() = field
//    set(value) {if (value > 10) field = 1}
////26. Уровень освещения
//var lumin: Int = 3500 // определяемое для самомго мероприятия, в люминах, может меняться по обстановке.
////27.Лог событий мероприятия
//var log: String = ""
////28. Возможность получения медицинской помощи прямо на мероприятии (да/нет)
//const val is_medic: Boolean = true
////29. Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций.
//const val evacuation: String = "Plan оф эвакуация"
////30. Регистрационный номер мероприятия
//const val id_hak: Int = 124
////31. Максимально допустимый уровень шума в помещении хакатона.
//const val noise_max: Int = 110
////32. Индикатор превышения уровня шума в помещениях (превышен или не превышен в данный момент)
//var noise_islim: Boolean = false // пока не превышен
////33. План взаимодействия с прессой
//val press_info: String = "Конкретно кто освещает мероприятие" //договорено заранее
////34. Детальная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок
//var com_proj: String = "" // пока данных нет, данные собираются на хакатоне
////35. Статус получения всех необходимых разрешений
//var razresh: String = "Собираются" //
////36. Индикатор доступности специализированного оборудования в данный момент (например, специальному оборудованию)
//private var ind_oborud: Boolean = true
////37. Список партнеров мероприятия
//var partners: String = "1) 2) 3)"
////38. Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.
//lateinit var report_final: String = ""
////39. Внутренние правила распределения призов
//private val prises: String = "Процедуры и принципы распределения"
////40. Список разыгрываемых призов
//var prices: String = "1) 2)" // определен бюджетом
////41. Контактная информация экстренных служб, медицинского персонала и других важных служб, для внутреннего пользования.
//private val sos: String = "102"
////42. Особые условия для участников с ограниченными возможностями
//val invalid: String = "Выделенный помощник"
////43. Общее настроение участников (определяется опросами)
//lateinit var nastroi_final: String = ""
////44. Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия, так как зависит от фактического состава команд и взятых в работу задач.
//val lazy_plan: String = "Текст шаблонного плана" // корректируется перед началом
////45. Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия, но в момент инициализации неизвестно.
//private val quest: String = "Пугачева"
////46. Максимальное количество людей, которое может вместить место проведения.
//const val max_people: Int = 550
////47. Количество часов, отведенное каждой команде для работы над проектом.
//val time_project: Int = 55